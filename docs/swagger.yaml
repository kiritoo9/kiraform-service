definitions:
  authschema.LoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  authschema.RegisterPayload:
    properties:
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
    required:
    - email
    - fullname
    - password
    type: object
  commonschema.ResponseHTTP:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  masterschema.CampaignFormAttributePayload:
    properties:
      id:
        type: string
      is_default:
        default: false
        type: boolean
      label:
        type: string
      value:
        type: string
    required:
    - label
    - value
    type: object
  masterschema.CampaignFormPayload:
    properties:
      attributes:
        items:
          $ref: '#/definitions/masterschema.CampaignFormAttributePayload'
        type: array
      default_value:
        type: string
      description:
        type: string
      form_id:
        type: string
      id:
        type: string
      is_multiple:
        default: false
        type: boolean
      is_required:
        default: false
        type: boolean
      placeholder:
        type: string
      title:
        type: string
    required:
    - form_id
    - title
    type: object
  masterschema.CampaignPayload:
    properties:
      description:
        type: string
      forms:
        items:
          $ref: '#/definitions/masterschema.CampaignFormPayload'
        type: array
      is_publish:
        default: false
        type: boolean
      title:
        type: string
    required:
    - forms
    - title
    type: object
  masterschema.CampaignSeoPayload:
    properties:
      access_key:
        type: string
      event:
        type: string
      platform:
        type: string
    type: object
  masterschema.WorkspacePayload:
    properties:
      description:
        type: string
      is_publish:
        default: false
        type: boolean
      thumbnail:
        type: string
      title:
        type: string
    required:
    - title
    type: object
info:
  contact: {}
paths:
  /api/campaigns/{workspace_id}:
    get:
      consumes:
      - application/json
      description: Get the list of campaigns you created
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Page of list data
        in: query
        name: page
        required: true
        type: integer
      - description: Limitting data you want to get
        in: query
        name: limit
        required: true
        type: integer
      - description: Find your data with keywords
        in: query
        name: search
        type: string
      - description: Ordering data
        example: created_at:desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: List Campaigns
      tags:
      - Master - Campaigns
    post:
      consumes:
      - application/json
      description: Create new campaign data
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: campaign payload
        in: body
        name: campaignPayload
        required: true
        schema:
          $ref: '#/definitions/masterschema.CampaignPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Create Campaign
      tags:
      - Master - Campaigns
  /api/campaigns/{workspace_id}/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing campaign data
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Delete Campaign
      tags:
      - Master - Campaigns
    get:
      consumes:
      - application/json
      description: Get detail of campaigns you created
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Detail Campaigns
      tags:
      - Master - Campaigns
    put:
      consumes:
      - application/json
      description: Update existing campaign data
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      - description: Campaign payload
        in: body
        name: campaignPayload
        required: true
        schema:
          $ref: '#/definitions/masterschema.CampaignPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Update Campaign
      tags:
      - Master - Campaigns
  /api/campaigns/seos/{campaign_id}:
    get:
      consumes:
      - application/json
      description: Get the list of seo campaign you created
      parameters:
      - description: Campaign ID
        in: path
        name: campaign_id
        required: true
        type: string
      - description: Page of list data
        in: query
        name: page
        required: true
        type: integer
      - description: Limitting data you want to get
        in: query
        name: limit
        required: true
        type: integer
      - description: Find your data with keywords
        in: query
        name: search
        type: string
      - description: Ordering data
        example: created_at:desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: List SEO Campaign
      tags:
      - Master - Campaign SEO
    post:
      consumes:
      - application/json
      description: Create new seo campaign data
      parameters:
      - description: Campaign ID
        in: path
        name: campaign_id
        required: true
        type: string
      - description: SEO campaign payload
        in: body
        name: campaignSeoPayload
        required: true
        schema:
          $ref: '#/definitions/masterschema.CampaignSeoPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Create SEO Campaign
      tags:
      - Master - Campaign SEO
  /api/campaigns/seos/{campaign_id}/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing seo campaign data
      parameters:
      - description: Campaign ID
        in: path
        name: campaign_id
        required: true
        type: string
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Delete SEO Campaign
      tags:
      - Master - Campaign SEO
    get:
      consumes:
      - application/json
      description: Get detail of seo campaign you created
      parameters:
      - description: Campaign ID
        in: path
        name: campaign_id
        required: true
        type: string
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Detail SEO Campaign
      tags:
      - Master - Campaign SEO
    put:
      consumes:
      - application/json
      description: Update existing seo campaign data
      parameters:
      - description: Campaign ID
        in: path
        name: campaign_id
        required: true
        type: string
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      - description: SEO campaign payload
        in: body
        name: campaignSeoPayload
        required: true
        schema:
          $ref: '#/definitions/masterschema.CampaignSeoPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Update SEO Campaign
      tags:
      - Master - Campaign SEO
  /api/forms:
    get:
      consumes:
      - application/json
      description: Get the list of forms you created
      parameters:
      - description: Page of list data
        in: query
        name: page
        required: true
        type: integer
      - description: Limitting data you want to get
        in: query
        name: limit
        required: true
        type: integer
      - description: Find your data with keywords
        in: query
        name: search
        type: string
      - description: Ordering data
        example: created_at:desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: List Forms
      tags:
      - Master - Forms
  /api/forms/{id}:
    get:
      consumes:
      - application/json
      description: Get detail data of form you choose
      parameters:
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Detail Form
      tags:
      - Master - Forms
  /api/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Login credentials
        in: body
        name: loginPayload
        required: true
        schema:
          $ref: '#/definitions/authschema.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Login success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Login failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      summary: Login
      tags:
      - Authentication
  /api/register:
    post:
      consumes:
      - application/json
      description: You can regist new user here
      parameters:
      - description: Register credentials
        in: body
        name: registerPayload
        required: true
        schema:
          $ref: '#/definitions/authschema.RegisterPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Registration success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Registration failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      summary: Registration
      tags:
      - Authentication
  /api/workspaces:
    get:
      consumes:
      - application/json
      description: Get the list of workspaces you created
      parameters:
      - description: Page of list data
        in: query
        name: page
        required: true
        type: integer
      - description: Limitting data you want to get
        in: query
        name: limit
        required: true
        type: integer
      - description: Find your data with keywords
        in: query
        name: search
        type: string
      - description: Ordering data
        example: created_at:desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: List Workspaces
      tags:
      - Master - Workspaces
    post:
      consumes:
      - application/json
      description: Create new workspace data
      parameters:
      - description: Workspace payload
        in: body
        name: workspacePayload
        required: true
        schema:
          $ref: '#/definitions/masterschema.WorkspacePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Create Workspace
      tags:
      - Master - Workspaces
  /api/workspaces/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing workspace data
      parameters:
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Delete Workspace
      tags:
      - Master - Workspaces
    get:
      consumes:
      - application/json
      description: Get detail data of workspace you choose
      parameters:
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Detail Workspace
      tags:
      - Master - Workspaces
    put:
      consumes:
      - application/json
      description: Update existing workspace data
      parameters:
      - description: ID of your data
        in: path
        name: id
        required: true
        type: string
      - description: Workspace payload
        in: body
        name: workspacePayload
        required: true
        schema:
          $ref: '#/definitions/masterschema.WorkspacePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Request success
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
        "400":
          description: Request failure
          schema:
            $ref: '#/definitions/commonschema.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: Update Workspace
      tags:
      - Master - Workspaces
securityDefinitions:
  BearerAuth:
    description: Type "Bearer " followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
